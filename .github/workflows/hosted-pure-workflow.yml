# Copyright (c) 2021 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT

# A "pure" GitHub workflow using CMake, Ninja and vcpkg to build a C/C++ codebase.
# It leverages both CMakePresets.json and vcpkg.json to have consistent build locallly
# and on continuous integration servers (aka build agents).
# It is called "pure workflow" because it is an example which minimizes the usage of
# custom GitHub actions, but leverages directly the tools that could be easily run on
# your development machines (i.e. CMake, vcpkg, Ninja) to ensure a perfectly identical
# and reproducible build locally (on your development machine) and remotely (on build agents).
name: hosted-pure-workflow
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already: on subsequent runs both will be quickly restored from GitHub cache service.
      - uses: lukka/get-cmake@latest

#      - name: Set up GCC
#        uses: egor-tensin/setup-gcc@v1
#        with:
#          version: latest
#          platform: x64

      # Run CMake to generate Ninja project files, using the vcpkg's toolchain file to resolve and install the dependencies as specified in vcpkg.json.
      - name: Install dependencies and generate project files
        run: |
          cmake --preset ninja-multi-vcpkg

      # Build the whole project with Ninja (which is spawn by CMake). Debug configuration.
      - name: Build (Debug)
        run: |
          cmake --build --preset ninja-multi-vcpkg-debug
      - name: GZip
        run: |
          ls -l ./builds/ninja-multi-vcpkg/Debug
          mkdir HelloAutoCI-${{ matrix.os }}
          cp ./builds/ninja-multi-vcpkg/Debug/main HelloAutoCI-${{ matrix.os }}/
          tar -czvf HelloAutoCI-${{ matrix.os }}.tar.gz HelloAutoCI-${{ matrix.os }}
      - name: Upload to Release Action
        uses: Shopify/upload-to-release@v1.0.1
        with:
          name: HelloAutoCI
          path: HelloAutoCI-${{ matrix.os }}.tar.gz
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          content-type: application/x-gzip
